# Demo Design 项目专用 Agent 配置

## 项目概述
这是一个综合性的设计演示项目，包含：
- 数字孪生系统（水泥工厂3D可视化）
- AI智能运维界面
- 前端设计组件库

## 技术栈规范
- **前端框架**: HTML5, CSS3, JavaScript (ES6+)
- **3D可视化**: Three.js (版本 0.128.0)
- **UI组件**: Element UI, 自定义组件
- **图表库**: ECharts
- **数据处理**: D3.js
- **开发语言**: 中文注释和文档

## 代码规范
- 使用中文注释和文档说明
- 遵循现代前端开发最佳实践
- 组件化开发，模块化设计
- 响应式设计，支持多设备
- 性能优化，内存管理
- 错误处理和日志记录

## 项目结构
```
Demo-design/
├── AIUI/           # AI智能运维界面
├── digitalTwins/   # 数字孪生核心功能
├── dt/            # 数字孪生简化版本
└── index.html     # 项目导航中心
```

## 开发指导原则
1. **用户体验优先**: 界面友好，交互流畅
2. **性能优化**: 3D渲染优化，数据加载优化
3. **可维护性**: 清晰的代码结构，完善的文档
4. **可扩展性**: 模块化设计，便于功能扩展
5. **兼容性**: 支持主流浏览器

## 特殊要求
- 数字孪生系统需要实时数据绑定
- AI界面需要智能交互功能
- 所有界面需要响应式设计
- 代码需要详细的错误处理机制

## 工作流程规范
### 需求分析阶段
- 通过提问深入了解用户真实需求
- 识别需求中的模糊点和矛盾点
- 引导用户明确功能边界和约束条件
- 挖掘潜在的业务价值和技术风险

### PRD生成阶段
- 基于需求分析结果生成标准化的PRD文档
- 包含完整的功能需求和非功能性需求
- 定义清晰的验收标准和测试用例
- 确保文档的可追溯性和完整性

### 任务拆解阶段
- 将PRD需求拆解为具体的开发任务
- 识别任务间的依赖关系和优先级
- 制定详细的技术方案和开发计划
- 评估开发工作量和潜在风险

### 开发实现阶段
- 基于任务拆解要求进行代码实现
- 遵循项目编码规范和最佳实践
- 确保代码质量和功能完整性
- 进行必要的测试和优化

### 质量把控阶段
- 进行代码审查和质量评估
- 验证功能实现是否符合PRD要求
- 确保系统性能和用户体验
- 协调测试和部署工作

## Agent协作模式
### 项目主控Agent
- 负责整体工作流程的协调和管理
- 协调各专业Agent的工作
- 确保流程的顺畅和高效
- 处理流程中的异常和问题

### 专业Agent分工
- **需求分析Agent**: 负责需求收集、澄清和分析
- **PRD生成Agent**: 负责PRD文档的编写和标准化
- **任务拆解Agent**: 负责开发任务的分解和规划
- **前端开发Agent**: 负责具体的代码实现
- **数字孪生Agent**: 负责3D可视化和实时数据绑定
- **AI界面Agent**: 负责智能交互和用户体验

## 质量保证
- 每个阶段设置质量门禁
- 建立标准化的验收标准
- 进行持续的代码审查
- 确保文档的完整性和准确性
- 建立知识库和最佳实践 